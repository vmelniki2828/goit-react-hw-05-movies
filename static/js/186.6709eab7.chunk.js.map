{"version":3,"file":"static/js/186.6709eab7.chunk.js","mappings":"oRAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAoB,WAC/B,OAAOF,EAAAA,EAAAA,IACA,qBAAsB,CAAEG,OAAQ,CAAEC,QAASH,KAC/CI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,OAAb,GACZ,EAEYC,EAAiB,SAAAC,GAC5B,OAAOV,EAAAA,EAAAA,IACA,eAAgB,CAAEG,OAAQ,CAAEC,QAASH,EAASS,MAAAA,KAClDL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,OAAb,GACZ,EAEYG,EAAqB,SAAAC,GAChC,OAAOZ,EAAAA,EAAAA,IAAA,gBACSY,GAAY,CACxBT,OAAQ,CACNC,QAASH,KAGZI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,IAAR,GACZ,EAEYM,EAAqB,SAAAD,GAChC,OAAOZ,EAAAA,EAAAA,IAAA,gBACSY,EADT,YAC6B,CAChCT,OAAQ,CACNC,QAASH,KAGZI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,IAAR,GACZ,EAEYO,EAAwB,SAAAF,GACnC,OAAOZ,EAAAA,EAAAA,IAAA,gBACSY,EADT,YAC6B,CAChCT,OAAQ,CACNC,QAASH,KAGZI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,IAAR,GACZ,C,8ECdD,UA3BgB,WACd,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAsBC,GAASV,MAAK,SAAAE,GAAI,OAAIY,EAAWZ,EAAKC,QAApB,GACzC,GAAE,CAACO,KAGF,wBACsB,IAAnBG,EAAQG,QACP,wBAAI,yCAEJH,EAAQI,KAAI,SAAAC,GACV,IAAQC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,QAASC,EAAOH,EAAPG,GACzB,OACE,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EAKZ,KAIR,C","sources":["Utils/Api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a860cfd897e99827a5ea5e5210690a78';\n\nexport const searchMovieTopApi = () => {\n  return axios\n    .get('trending/movie/day', { params: { api_key: API_KEY } })\n    .then(res => res.data.results);\n};\n\nexport const searchMovieApi = query => {\n  return axios\n    .get('search/movie', { params: { api_key: API_KEY, query } })\n    .then(res => res.data.results);\n};\n\nexport const searchMovieToIdApi = movie_id => {\n  return axios\n    .get(`movie/${movie_id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport const searchMovieCastApi = movie_id => {\n  return axios\n    .get(`movie/${movie_id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport const searchMovieReviewsApi = movie_id => {\n  return axios\n    .get(`movie/${movie_id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { searchMovieReviewsApi } from '../../Utils/Api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    searchMovieReviewsApi(movieId).then(data => setReviews(data.results));\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length === 0 ? (\n        <li>We don`t have reviews for this movie</li>\n      ) : (\n        reviews.map(review => {\n          const { author, content, id } = review;\n          return (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          );\n        })\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;"],"names":["axios","API_KEY","searchMovieTopApi","params","api_key","then","res","data","results","searchMovieApi","query","searchMovieToIdApi","movie_id","searchMovieCastApi","searchMovieReviewsApi","movieId","useParams","useState","reviews","setReviews","useEffect","length","map","review","author","content","id"],"sourceRoot":""}