{"version":3,"file":"static/js/296.392bb0c0.chunk.js","mappings":"sMA0CA,UArCoB,WAClB,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEA,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAAQP,EAAaQ,IAAI,SAqB/B,OAJAC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIJ,GACZA,IAASK,EAAAA,EAAAA,IAAeL,GAAOM,MAAK,SAAAC,GAAI,OAAIR,EAAaQ,EAAjB,GACzC,GAAE,CAACP,KAEF,iCACE,kBAAMQ,SAnBa,SAAAC,GACrBA,EAAEC,iBACe,KAAdd,GACDF,EAAgB,CAAEM,MAAOJ,GAG5B,EAaG,WACE,kBAAOe,KAAK,OAAOC,MAAOC,aAAaC,QAAQ,SAAUC,SAZ3C,SAAAN,GAClBI,aAAaG,QAAQ,QAASP,EAAEQ,OAAOL,OACvCf,EAAagB,aAAaC,QAAQ,SACnC,KAUK,mBAAQH,KAAK,SAAb,SAAsB,eAExB,SAAC,IAAD,CAAWO,OAAQpB,MAGxB,C,oKCtCDqB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAoB,WAC/B,OAAOF,EAAAA,EAAAA,IACA,qBAAsB,CAAEG,OAAQ,CAAEC,QAASH,KAC/Cd,MAAK,SAAAkB,GAAG,OAAIA,EAAIjB,KAAKkB,OAAb,GACZ,EAEYpB,EAAiB,SAAAL,GAC5B,OAAOmB,EAAAA,EAAAA,IACA,eAAgB,CAAEG,OAAQ,CAAEC,QAASH,EAASpB,MAAAA,KAClDM,MAAK,SAAAkB,GAAG,OAAIA,EAAIjB,KAAKkB,OAAb,GACZ,EAEYC,EAAqB,SAAAC,GAChC,OAAOR,EAAAA,EAAAA,IAAA,gBACSQ,GAAY,CACxBL,OAAQ,CACNC,QAASH,KAGZd,MAAK,SAAAkB,GAAG,OAAIA,EAAIjB,IAAR,GACZ,EAEYqB,EAAqB,SAAAD,GAChC,OAAOR,EAAAA,EAAAA,IAAA,gBACSQ,EADT,YAC6B,CAChCL,OAAQ,CACNC,QAASH,KAGZd,MAAK,SAAAkB,GAAG,OAAIA,EAAIjB,IAAR,GACZ,EAEYsB,EAAwB,SAAAF,GACnC,OAAOR,EAAAA,EAAAA,IAAA,gBACSQ,EADT,YAC6B,CAChCL,OAAQ,CACNC,QAASH,KAGZd,MAAK,SAAAkB,GAAG,OAAIA,EAAIjB,IAAR,GACZ,C,oFC7BD,EAZkB,SAAC,GAAe,IAAbuB,EAAY,EAAZA,MACVC,EAAaD,EAAbC,GAAIC,EAASF,EAATE,MACLC,GAAWC,EAAAA,EAAAA,MACjB,OACI,yBACI,SAAC,KAAD,CAAMC,MAAOF,EAAUG,GAAE,iBAAYL,GAArC,SACKC,KAFAD,EAMhB,ECAD,EAXkB,SAAC,GAAgB,IAAdb,EAAa,EAAbA,OAEnB,OACE,wBACGA,EAAOmB,KAAI,SAAAP,GACV,OAAO,SAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMC,GAC9B,KAGN,C","sources":["Pages/SearchMovie.jsx","Utils/Api.js","components/Movie/MovieItem.jsx","components/Movie/MovieList.jsx"],"sourcesContent":["import MovieList from 'components/Movie/MovieList';\nimport { searchMovieApi } from 'Utils/Api';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst SearchMovie = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [movieName, setMovieName] = useState('');\n  const [movieList, setMovieList] = useState([]);\n  const query = searchParams.get('query');\n\n\n\n  const SearchingMovie = e => {\n    e.preventDefault();  \n    if(movieName !== ''){ \n      setSearchParams({ query: movieName });\n    }\n    \n  };\n\n  const changeInput = e => {\n    localStorage.setItem('query', e.target.value)\n    setMovieName(localStorage.getItem('query'));\n  };\n\n  useEffect(() => {\n    console.log(query)\n    query && searchMovieApi(query).then(data => setMovieList(data));\n  }, [query]);\n  return (\n    <>\n      <form onSubmit={SearchingMovie}>\n        <input type=\"text\" value={localStorage.getItem('query')} onChange={changeInput} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MovieList movies={movieList} />\n    </>\n  );\n};\n\nexport default SearchMovie;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a860cfd897e99827a5ea5e5210690a78';\n\nexport const searchMovieTopApi = () => {\n  return axios\n    .get('trending/movie/day', { params: { api_key: API_KEY } })\n    .then(res => res.data.results);\n};\n\nexport const searchMovieApi = query => {\n  return axios\n    .get('search/movie', { params: { api_key: API_KEY, query } })\n    .then(res => res.data.results);\n};\n\nexport const searchMovieToIdApi = movie_id => {\n  return axios\n    .get(`movie/${movie_id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport const searchMovieCastApi = movie_id => {\n  return axios\n    .get(`movie/${movie_id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport const searchMovieReviewsApi = movie_id => {\n  return axios\n    .get(`movie/${movie_id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nconst MovieItem = ({ movie }) => {\n    const {id, title} = movie;\n    const location = useLocation();\n    return(\n        <li key={id}>\n            <Link state={location} to={`/movie/${id}`}>\n                {title}\n            </Link>\n        </li>\n    )\n}\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n    movie: PropTypes.object.isRequired,\n  }","import MovieItem from \"./MovieItem\";\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n\n  return (\n    <ul>\n      {movies.map(movie => {\n        return <MovieItem key={movie.id} movie={movie} />;\n      })}\n    </ul>\n  );\n};\n\nexport default MovieList\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n}"],"names":["useSearchParams","searchParams","setSearchParams","useState","movieName","setMovieName","movieList","setMovieList","query","get","useEffect","console","log","searchMovieApi","then","data","onSubmit","e","preventDefault","type","value","localStorage","getItem","onChange","setItem","target","movies","axios","API_KEY","searchMovieTopApi","params","api_key","res","results","searchMovieToIdApi","movie_id","searchMovieCastApi","searchMovieReviewsApi","movie","id","title","location","useLocation","state","to","map"],"sourceRoot":""}