{"version":3,"file":"static/js/247.af87acf9.chunk.js","mappings":"oRAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAoB,WAC/B,OAAOF,EAAAA,EAAAA,IACA,qBAAsB,CAAEG,OAAQ,CAAEC,QAASH,KAC/CI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,OAAb,GACZ,EAEYC,EAAiB,SAAAC,GAC5B,OAAOV,EAAAA,EAAAA,IACA,eAAgB,CAAEG,OAAQ,CAAEC,QAASH,EAASS,MAAAA,KAClDL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,OAAb,GACZ,EAEYG,EAAqB,SAAAC,GAChC,OAAOZ,EAAAA,EAAAA,IAAA,gBACSY,GAAY,CACxBT,OAAQ,CACNC,QAASH,KAGZI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,IAAR,GACZ,EAEYM,EAAqB,SAAAD,GAChC,OAAOZ,EAAAA,EAAAA,IAAA,gBACSY,EADT,YAC6B,CAChCT,OAAQ,CACNC,QAASH,KAGZI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,IAAR,GACZ,EAEYO,EAAwB,SAAAF,GACnC,OAAOZ,EAAAA,EAAAA,IAAA,gBACSY,EADT,YAC6B,CAChCT,OAAQ,CACNC,QAASH,KAGZI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,IAAR,GACZ,C,8ECfD,UA1Ba,WACX,IACA,GAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAmBK,GAASb,MAAK,SAAAE,GAAI,OAAIU,EAAUV,EAAKc,KAAnB,GACtC,GAAE,CAACH,KAGF,wBACGF,EAAOM,KAAI,SAAAC,GACV,IAAQC,EAAsCD,EAAtCC,KAAMC,EAAgCF,EAAhCE,aAAcC,EAAkBH,EAAlBG,GAAIC,EAAcJ,EAAdI,UAChC,OACE,2BACE,gBAAKC,IAAG,UAfA,oCAeA,OAAiBH,GAAgBI,IAAKL,KAC9C,wBAAKA,KACL,uBAAIG,MAHGD,EAMZ,KAGN,C","sources":["Utils/Api.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a860cfd897e99827a5ea5e5210690a78';\n\nexport const searchMovieTopApi = () => {\n  return axios\n    .get('trending/movie/day', { params: { api_key: API_KEY } })\n    .then(res => res.data.results);\n};\n\nexport const searchMovieApi = query => {\n  return axios\n    .get('search/movie', { params: { api_key: API_KEY, query } })\n    .then(res => res.data.results);\n};\n\nexport const searchMovieToIdApi = movie_id => {\n  return axios\n    .get(`movie/${movie_id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport const searchMovieCastApi = movie_id => {\n  return axios\n    .get(`movie/${movie_id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport const searchMovieReviewsApi = movie_id => {\n  return axios\n    .get(`movie/${movie_id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { searchMovieCastApi } from '../../Utils/Api';\n\nconst Cast = () => {\n  const START_URL = 'https://image.tmdb.org/t/p/w500/';\n  const [actors, setActors] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    searchMovieCastApi(movieId).then(data => setActors(data.cast));\n  }, [movieId]);\n\n  return (\n    <ul>\n      {actors.map(actor => {\n        const { name, profile_path, id, character } = actor;\n        return (\n          <li key={id}>\n            <img src={`${START_URL}${profile_path}`} alt={name} />\n            <h3>{name}</h3>\n            <p>{character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","API_KEY","searchMovieTopApi","params","api_key","then","res","data","results","searchMovieApi","query","searchMovieToIdApi","movie_id","searchMovieCastApi","searchMovieReviewsApi","useState","actors","setActors","movieId","useParams","useEffect","cast","map","actor","name","profile_path","id","character","src","alt"],"sourceRoot":""}